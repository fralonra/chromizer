{
  "version": 3,
  "sources": ["../../build/_snowpack/pkg/kyrema.js", "../../build/dist/index.js"],
  "sourcesContent": ["function createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar lib = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.kyremaWithCentroids = exports.kyrema = void 0;\nconst MAX_TRY = 50;\nfunction kyrema(k, data, distanceCalculator, averageCalculator, centroidEqualator, maxTry = MAX_TRY) {\n    if (data.length <= 0) {\n        return [];\n    }\n    if (k >= data.length) {\n        throw 'Data count is less than k.';\n    }\n    const centroids = [];\n    let lastLoopStartIdx = 0;\n    let idx = lastLoopStartIdx;\n    let step = decideStep();\n    while (centroids.length < k) {\n        if (lastLoopStartIdx > data.length - 1) {\n            throw 'No enough centroids found. Please specify a smaller k.';\n        }\n        const centroid = data[idx];\n        if (centroids.every((c) => !centroidEqualator(c, centroid))) {\n            centroids.push(centroid);\n        }\n        else {\n            step = decideStep();\n            if (step <= 0) {\n                lastLoopStartIdx++;\n                idx = lastLoopStartIdx;\n                step = decideStep();\n                continue;\n            }\n        }\n        idx += step;\n    }\n    return kyremaWithCentroids(k, centroids, data, distanceCalculator, averageCalculator, centroidEqualator, maxTry);\n    function decideStep() {\n        return Math.floor((data.length - 1 - idx) / (k - centroids.length));\n    }\n}\nexports.kyrema = kyrema;\nfunction kyremaWithCentroids(k, initialCentroids, data, distanceCalculator, averageCalculator, centroidEqualator, maxTry = MAX_TRY) {\n    const dataGroups = [];\n    for (let i = 0; i < k; i++) {\n        dataGroups.push([]);\n    }\n    const result = initialCentroids.map((value) => ({\n        value,\n        count: 0,\n        indexes: [],\n    }));\n    let iterCount = 0;\n    while (true) {\n        data.forEach((d, i) => groupItem(d, i));\n        let equalCentroidCount = 0;\n        for (let i = 0; i < k; i++) {\n            const datas = dataGroups[i];\n            const centroid = result[i];\n            const averageCentroid = averageCalculator(datas);\n            if (!centroidEqualator(centroid.value, averageCentroid)) {\n                centroid.value = averageCentroid;\n            }\n            else {\n                equalCentroidCount++;\n            }\n        }\n        if (++iterCount >= maxTry || equalCentroidCount === k) {\n            break;\n        }\n        for (let i = 0; i < k; i++) {\n            result[i].count = 0;\n            result[i].indexes = [];\n            dataGroups[i] = [];\n        }\n    }\n    return result;\n    function groupItem(data, idx) {\n        let minDistance = Number.MAX_SAFE_INTEGER;\n        let groupIdx = 0;\n        for (let i = 0; i < k; i++) {\n            const d = distanceCalculator(data, result[i].value);\n            if (d < minDistance) {\n                minDistance = d;\n                groupIdx = i;\n            }\n        }\n        result[groupIdx].count++;\n        result[groupIdx].indexes.push(idx);\n        dataGroups[groupIdx].push(data);\n    }\n}\nexports.kyremaWithCentroids = kyremaWithCentroids;\n\n});\n\nvar kyrema = lib.kyrema;\nexport { kyrema };\n", "import {kyrema} from \"../_snowpack/pkg/kyrema.js\";\nfunction main() {\n  const canvas = document.getElementById(\"canvas\");\n  const canvasWrapper = document.getElementById(\"canvas-wrapper\");\n  const kInput = document.getElementById(\"k-input\");\n  const modal = document.getElementById(\"modal\");\n  const palette = document.getElementById(\"palette\");\n  const upload = document.getElementById(\"upload\");\n  const ctx = canvas.getContext(\"2d\");\n  let k = parseInt(kInput.value);\n  let image = null;\n  let activedPalleteIndex = -1;\n  let originalImageData = new Uint8ClampedArray();\n  const renderImageDatas = [];\n  upload.addEventListener(\"change\", onUploaded);\n  kInput.addEventListener(\"change\", onKChanged);\n  window.addEventListener(\"resize\", onWindowResized);\n  function addPaletteItem(index, centroid, image2) {\n    const itemEl = document.createElement(\"li\");\n    const colorEl = document.createElement(\"div\");\n    colorEl.classList.add(\"colorbar\");\n    colorEl.style.backgroundColor = `rgba(${centroid.value.join(\",\")})`;\n    colorEl.addEventListener(\"click\", function onColorbarClicked() {\n      const itemFocused = activedPalleteIndex !== index;\n      activedPalleteIndex = itemFocused ? index : -1;\n      if (itemFocused) {\n        palette.querySelectorAll(\".colorbar\").forEach((el) => el.style.border = \"\");\n      }\n      colorEl.style.border = itemFocused ? \"1px solid #f00\" : \"\";\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(new ImageData(activedPalleteIndex > -1 ? renderImageDatas[activedPalleteIndex] : originalImageData, image2.width, image2.height), 0, 0);\n    });\n    const percentEl = document.createElement(\"div\");\n    percentEl.textContent = `${(centroid.count * 100 / (image2.width * image2.height)).toFixed(2)}%`;\n    itemEl.appendChild(colorEl);\n    itemEl.appendChild(percentEl);\n    palette.appendChild(itemEl);\n  }\n  function chromizeImage(image2) {\n    modalShow();\n    setTimeout(() => {\n      activedPalleteIndex = -1;\n      renderImageDatas.length = 0;\n      const collection = [];\n      for (let i = 0; i < originalImageData.length; i += 4) {\n        collection.push([\n          originalImageData[i],\n          originalImageData[i + 1],\n          originalImageData[i + 2],\n          originalImageData[i + 3]\n        ]);\n      }\n      const distanceCalculator = (data, centroid) => {\n        return Math.sqrt(Math.pow(data[0] - centroid[0], 2) + Math.pow(data[1] - centroid[1], 2) + Math.pow(data[2] - centroid[2], 2) + Math.pow(data[3] - centroid[3], 2));\n      };\n      const averageCalculator = (datas) => {\n        const average = [\n          datas.reduce((p, c) => p + c[0], 0) / datas.length,\n          datas.reduce((p, c) => p + c[1], 0) / datas.length,\n          datas.reduce((p, c) => p + c[2], 0) / datas.length,\n          datas.reduce((p, c) => p + c[3], 0) / datas.length\n        ];\n        let minDistance = Number.MAX_SAFE_INTEGER;\n        let averageData = datas[0];\n        datas.forEach((data) => {\n          const d = distanceCalculator(data, average);\n          if (d < minDistance) {\n            minDistance = d;\n            averageData = data;\n          }\n        });\n        return averageData;\n      };\n      const centroidEqualator = (c1, c2) => {\n        return c1[0] === c2[0] && c1[1] === c2[1] && c1[2] === c2[2] && c1[3] === c2[3];\n      };\n      const k2 = parseInt(kInput.value);\n      try {\n        const result = kyrema(k2, collection, distanceCalculator, averageCalculator, centroidEqualator);\n        result.sort((a, b) => b.count - a.count);\n        result.forEach(({indexes}) => {\n          const data = Uint8ClampedArray.from(originalImageData);\n          const set = new Set(indexes);\n          for (let i = 0; i < data.length; i += 4) {\n            if (set.has(i / 4))\n              continue;\n            data[i + 3] = 20;\n          }\n          renderImageDatas.push(data);\n        });\n        palette.innerHTML = \"\";\n        for (let i = 0; i < k2; i++) {\n          addPaletteItem(i, result[i], image2);\n        }\n      } catch (e) {\n        console.error(e);\n        palette.innerHTML = \"\";\n      } finally {\n        modalHide();\n      }\n    });\n  }\n  function modalHide() {\n    modal.style.display = \"none\";\n  }\n  function modalShow() {\n    modal.style.display = \"block\";\n  }\n  function onKChanged() {\n    k = parseInt(kInput.value);\n    if (image !== null) {\n      if (activedPalleteIndex > -1) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(image, 0, 0);\n      }\n      chromizeImage(image);\n    }\n  }\n  function onUploaded(e) {\n    const target = e.target;\n    if (target.files !== null && target.files.length > 0) {\n      const imageFile = target.files[0];\n      image = new Image();\n      image.src = URL.createObjectURL(imageFile);\n      image.onload = function onImageLoaded() {\n        if (image === null)\n          return;\n        resizeCanvas();\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(image, 0, 0);\n        originalImageData = ctx.getImageData(0, 0, image.width, image.height).data;\n        chromizeImage(image);\n      };\n    }\n  }\n  function onWindowResized() {\n    resizeCanvas();\n    if (image != null) {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.putImageData(new ImageData(activedPalleteIndex > -1 ? renderImageDatas[activedPalleteIndex] : originalImageData, image.width, image.height), 0, 0);\n    }\n  }\n  function resizeCanvas() {\n    if (image !== null) {\n      canvas.width = image.width;\n      canvas.height = image.height;\n    }\n    const aspect = canvas.width / canvas.height;\n    if (canvas.width >= canvasWrapper.clientWidth) {\n      if (canvas.height >= canvasWrapper.clientHeight) {\n        const cw = canvasWrapper.clientHeight * aspect;\n        canvas.style.width = cw < canvasWrapper.clientWidth ? `${cw}px` : \"100%\";\n      } else {\n        canvas.style.width = \"100%\";\n      }\n    } else if (canvas.width < canvasWrapper.clientWidth) {\n      if (canvas.height >= canvasWrapper.clientHeight) {\n        canvas.style.width = `${canvasWrapper.clientHeight * aspect}px`;\n      } else {\n        canvas.style.width = `${canvas.width}px`;\n      }\n    }\n    if (canvas.height >= canvasWrapper.clientHeight) {\n      if (canvas.width >= canvasWrapper.clientWidth) {\n        const ch = canvasWrapper.clientWidth / aspect;\n        canvas.style.height = ch < canvasWrapper.clientHeight ? `${ch}px` : \"100%\";\n      } else {\n        canvas.style.height = \"100%\";\n      }\n    } else if (canvas.height < canvasWrapper.clientHeight) {\n      if (canvas.width >= canvasWrapper.clientWidth) {\n        canvas.style.height = `${canvasWrapper.clientWidth / aspect}px`;\n      } else {\n        canvas.style.height = `${canvas.height}px`;\n      }\n    }\n  }\n}\nmain();\n"],
  "mappings": "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",
  "names": []
}
